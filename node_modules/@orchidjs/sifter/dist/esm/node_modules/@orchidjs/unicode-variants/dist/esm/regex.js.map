{"version":3,"file":"regex.js","sources":["../../../../../../../node_modules/@orchidjs/unicode-variants/dist/esm/regex.js"],"sourcesContent":["/*! @orchidjs/unicode-variants | https://github.com/orchidjs/unicode-variants | Apache License (v2) */\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {string[]} chars\n * @return {string}\n */\nconst arrayToPattern = chars => {\n  chars = chars.filter(Boolean);\n\n  if (chars.length < 2) {\n    return chars[0] || '';\n  }\n\n  return maxValueLength(chars) == 1 ? '[' + chars.join('') + ']' : '(?:' + chars.join('|') + ')';\n};\n/**\n * @param {string[]} array\n * @return {string}\n */\n\nconst sequencePattern = array => {\n  if (!hasDuplicates(array)) {\n    return array.join('');\n  }\n\n  let pattern = '';\n  let prev_char_count = 0;\n\n  const prev_pattern = () => {\n    if (prev_char_count > 1) {\n      pattern += '{' + prev_char_count + '}';\n    }\n  };\n\n  array.forEach((char, i) => {\n    if (char === array[i - 1]) {\n      prev_char_count++;\n      return;\n    }\n\n    prev_pattern();\n    pattern += char;\n    prev_char_count = 1;\n  });\n  prev_pattern();\n  return pattern;\n};\n/**\n * Convert array of strings to a regular expression\n *\tex ['ab','a'] => (?:ab|a)\n * \tex ['a','b'] => [ab]\n * @param {Set<string>} chars\n * @return {string}\n */\n\nconst setToPattern = chars => {\n  let array = toArray(chars);\n  return arrayToPattern(array);\n};\n/**\n *\n * https://stackoverflow.com/questions/7376598/in-javascript-how-do-i-check-if-an-array-has-duplicate-values\n * @param {any[]} array\n */\n\nconst hasDuplicates = array => {\n  return new Set(array).size !== array.length;\n};\n/**\n * https://stackoverflow.com/questions/63006601/why-does-u-throw-an-invalid-escape-error\n * @param {string} str\n * @return {string}\n */\n\nconst escape_regex = str => {\n  return (str + '').replace(/([\\$\\(\\)\\*\\+\\.\\?\\[\\]\\^\\{\\|\\}\\\\])/gu, '\\\\$1');\n};\n/**\n * Return the max length of array values\n * @param {string[]} array\n *\n */\n\nconst maxValueLength = array => {\n  return array.reduce((longest, value) => Math.max(longest, unicodeLength(value)), 0);\n};\n/**\n * @param {string} str\n */\n\nconst unicodeLength = str => {\n  return toArray(str).length;\n};\n/**\n * @param {any} p\n * @return {any[]}\n */\n\nconst toArray = p => Array.from(p);\n\nexport { arrayToPattern, escape_regex, hasDuplicates, maxValueLength, sequencePattern, setToPattern, toArray, unicodeLength };\n//# sourceMappingURL=regex.js.map\n"],"names":["arrayToPattern","chars","maxValueLength","sequencePattern","array","hasDuplicates","pattern","prev_char_count","prev_pattern","char","i","setToPattern","toArray","escape_regex","str","Math","unicodeLength","p","Array"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACaA,cAAc,GAAIC,KAAD,IAAU;AAEvCA,EAAAA,KAAK,GAAGA,KAAK,CAALA,MAAAA,CAARA,OAAQA,CAARA;;AAEA,MAAIA,KAAK,CAALA,MAAAA,GAAJ,CAAA,EAAsB;AACrB,WAAOA,KAAK,CAALA,CAAK,CAALA,IAAP,EAAA;AACA;;AAED,SAAQC,cAAc,CAAdA,KAAc,CAAdA,IAAD,CAACA,GAA8B,MAAID,KAAK,CAALA,IAAAA,CAAJ,EAAIA,CAAJ,GAA/B,GAACC,GAAuD,QAAMD,KAAK,CAALA,IAAAA,CAAN,GAAMA,CAAN,GAA/D,GAAA;AARM;AAWP;AACA;AACA;AACA;;;MACaE,eAAe,GAAIC,KAAD,IAAS;AAEvC,MAAI,CAACC,aAAa,CAAlB,KAAkB,CAAlB,EAA2B;AAC1B,WAAOD,KAAK,CAALA,IAAAA,CAAP,EAAOA,CAAP;AACA;;AAED,MAAIE,OAAO,GAAX,EAAA;AACA,MAAIC,eAAe,GAAnB,CAAA;;AAEA,QAAMC,YAAY,GAAG,MAAI;AACxB,QAAID,eAAe,GAAnB,CAAA,EAAyB;AACxBD,MAAAA,OAAO,IAAI,MAAA,eAAA,GAAXA,GAAAA;AACA;AAHF,GAAA;;AAMAF,EAAAA,KAAK,CAALA,OAAAA,CAAc,CAAA,IAAA,EAAA,CAAA,KAAU;AAEvB,QAAIK,IAAI,KAAKL,KAAK,CAACM,CAAC,GAApB,CAAkB,CAAlB,EAAyB;AACxBH,MAAAA,eAAe;AACf;AACA;;AAEDC,IAAAA,YAAY;AAEZF,IAAAA,OAAO,IAAPA,IAAAA;AACAC,IAAAA,eAAe,GAAfA,CAAAA;AAVDH,GAAAA;AAaAI,EAAAA,YAAY;AAEZ,SAAA,OAAA;AA9BM;AAoCP;AACA;AACA;AACA;AACA;AACA;AACA;;;MACaG,YAAY,GAAIV,KAAD,IAAS;AACpC,MAAIG,KAAK,GAAGQ,OAAO,CAAnB,KAAmB,CAAnB;AACA,SAAOZ,cAAc,CAArB,KAAqB,CAArB;AAFM;AAOP;AACA;AACA;AACA;AACA;;;MACaK,aAAa,GAAID,KAAD,IAAW;AACpC,SAAQ,IAAA,GAAA,CAAD,KAAC,EAAD,IAAC,KAAyBA,KAAK,CAAtC,MAAA;AADG;AAKP;AACA;AACA;AACA;AACA;;;MACaS,YAAY,GAAIC,GAAD,IAAS;AACpC,SAAO,CAACA,GAAG,GAAJ,EAAA,EAAA,OAAA,CAAA,4BAAA,EAAP,MAAO,CAAP;AADM;AAIP;AACA;AACA;AACA;AACA;;;MACaZ,cAAc,GAAIE,KAAD,IAAW;AACxC,SAAOA,KAAK,CAALA,MAAAA,CAAc,CAAA,OAAA,EAAA,KAAA,KAAoBW,IAAI,CAAJA,GAAAA,CAAAA,OAAAA,EAAiBC,aAAa,CAAhEZ,KAAgE,CAA9BW,CAAlCX,EAAP,CAAOA,CAAP;AADM;AAKP;AACA;AACA;;;MACaY,aAAa,GAAIF,GAAD,IAAS;AACrC,SAAOF,OAAO,CAAPA,GAAO,CAAPA,CAAP,MAAA;AADM;AAIP;AACA;AACA;AACA;;;MACaA,OAAO,GAAIK,CAAD,IAAOC,KAAK,CAALA,IAAAA,CAAAA,CAAAA;;;;"}